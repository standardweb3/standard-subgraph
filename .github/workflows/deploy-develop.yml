---
name: Subgraph Develop Deploy

# Controls when the action will run.
on:
  push:
    branches:
      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Cancel any in-flight jobs for the same PR/branch so there's only one active
# at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  subgraph-deploy:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - chain: rinkeby
            subgraphs: exchange masterchefV2 blocks candles vault campaign
            graph_hosted: true
            graph_url: https://api.thegraph.com/deploy/
            ipfs_url: https://api.thegraph.com/ipfs/
    env:
      CHAIN: ${{ matrix.chain }}
      SUBGRAPHS: ${{ matrix.subgraphs }}
      GRAPH_HOSTED: ${{ matrix.graph_hosted }}
      GRAPH_URL: ${{ matrix.graph_url }}
      IPFS_URL: ${{ matrix.ipfs_url }}
      GRAPH_USER: digitalnativeinc
      GRAPH_CLI_VERSION: 0.22.2
      REQUIRED_PACKAGES: const pricing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Yarn - Restore cache
        uses: actions/checkout@v4
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn - Prepare
        shell: bash
        run: |
          yarn install --prefer-offline
          yarn prepare

      - name: Yarn - Deploy Subgraph
        shell: bash
        run: |
          for PACKAGE in ${{ env.REQUIRED_PACKAGES }}; do
            yarn workspace $PACKAGE codegen
          done

          for WORKSPACE in ${{ env.SUBGRAPHS }}; do
            if [[ ${{ matrix.graph_hosted }} == 'false' ]]; then
              yarn workspace $WORKSPACE codegen
              yarn workspace $WORKSPACE create-subgraph
              yarn workspace $WORKSPACE deploy --version-label 1.0.0
            else
              yarn workspace $WORKSPACE codegen
              yarn workspace $WORKSPACE deploy --access-token ${{ secrets.GRAPH_API_KEY }}
            fi
          done
