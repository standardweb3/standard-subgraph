---
name: Subgraph Manual Deploy

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      chain:
        description: 'Chain to deploy, e.g. rinkeby or shiden'
        required: true
      subgraphs:
        description: 'Space-separated list of subgraphs to deploy, e.g. exchange or exchange masterchefV2'
        required: true
      graph_hosted:
        description: 'Bool defining if this is deployed to Hosted Graph'
        required: false
        default: true
      graph_url:
        description: 'Graph URL'
        required: false
        default: https://api.thegraph.com/deploy/
      ipfs_url:
        description: 'IPFS URL'
        required: false
        default: https://api.thegraph.com/ipfs/
      graph_user:
        description: 'Graph User'
        required: false
        default: digitalnativeinc

jobs:
  subgraph-deploy:
    runs-on: ubuntu-20.04
    env:
      CHAIN: ${{ github.event.inputs.chain }}
      SUBGRAPHS: ${{ github.event.inputs.subgraphs }}
      GRAPH_HOSTED: ${{ github.event.inputs.graph_hosted }}
      GRAPH_URL: ${{ github.event.inputs.graph_url }}
      IPFS_URL: ${{ github.event.inputs.ipfs_url }}
      GRAPH_USER: ${{ github.event.inputs.graph_user }}
      GRAPH_CLI_VERSION: 0.22.2
      REQUIRED_PACKAGES: const pricing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Yarn - Restore cache
        uses: actions/checkout@v4
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn - Prepare
        shell: bash
        run: |
          yarn install --prefer-offline
          yarn prepare

      - name: Yarn - Deploy Subgraph
        shell: bash
        run: |
          for PACKAGE in ${{ env.REQUIRED_PACKAGES }}; do
            yarn workspace $PACKAGE codegen
          done

          for WORKSPACE in ${{ env.SUBGRAPHS }}; do
            if [[ ${{ github.event.inputs.graph_hosted }} == 'false' ]]; then
              yarn workspace $WORKSPACE codegen
              yarn workspace $WORKSPACE create-subgraph
              yarn workspace $WORKSPACE deploy --version-label 1.0.1
            else
              yarn workspace $WORKSPACE codegen
              yarn workspace $WORKSPACE deploy --access-token ${{ secrets.GRAPH_API_KEY }}
            fi
          done
